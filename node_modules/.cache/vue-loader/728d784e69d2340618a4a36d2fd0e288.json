{"remainingRequest":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/src/components/PokemonsList.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/src/components/PokemonsList.vue","mtime":1570909004874},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#list{\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n};\n\n#card{\n  margin-left: auto;\n  margin-right: auto;\n  width: 50%;\n  height: 500px;\n\n}\n#list_group{\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  height: 400px;\n  overflow:scroll;\n  -webkit-overflow-scrolling: touch;\n}\n\n\n",{"version":3,"sources":["PokemonsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PokemonsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"list\">\n        <b-card\n          id=\"card\"\n          title=\"Pokemon's List\"\n          class=\"mb-2 border-dark \"\n          \n        >\n        <b-list-group id=\"list_group\"  >\n            <b-list-group-item id_= \"list_group_item\"  \n            v-for=\"(pokemon, index) in pokemons\" :key=\"'poke'+index\" \n            class=\"mb-2 bg-dark text-white\" \n            @click=\"setPokemonUrl(pokemon.url)\" style=\"cursor: url('../src/assets/pokeball.png'),auto; \" button>{{ pokemon.name | capitalize }}\n        </b-list-group-item>\n        <div ref=\"infinitescrolltrigger\"></div>\n\n        </b-list-group>\n          \n        </b-card>\n        \n    </div>\n</template>\n\n<script>\n\nexport default {\n    name : 'PokemonsList',\n    props : [\n        'apiUrl',\n        \n    ],\n    data: () => {\n      return {\n        pokemons: [],\n        nextUrl: '',\n        currentUrl: '',\n      }\n    },\n    methods: {\n\n        //fetchData qui fait appelle à l'API et récupére la reponse et renvoie les données\n        fetchData() {\n        let req = new Request(this.currentUrl);\n        fetch(req)\n          .then((resp) => {\n            if(resp.status === 200)\n              return resp.json();\n          })\n          .then((data) => {\n            this.nextUrl = data.next;\n            data.results.forEach(pokemon => {\n              this.pokemons.push(pokemon);\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n          })\n      },\n\n      //Methode qui s'occupe du scroll avec pagination\n      scrollTrigger() {\n        const observer = new IntersectionObserver((entries) => {\n          entries.forEach(entry => {\n            if(entry.intersectionRatio > 0 && this.nextUrl) {\n              this.next();\n            }\n          });\n        });\n\n        observer.observe(this.$refs.infinitescrolltrigger);\n      },\n\n      next() {\n        this.currentUrl = this.nextUrl;\n        this.fetchData();\n      },\n\n      //Recuperation de l'evenement du click sur le nom d'un pokemon\n      setPokemonUrl(url) {\n        this.$emit('setPokemonUrl', url);\n      }\n    },\n    filters: {\n      capitalize: function (value) {\n        if (!value) return ''\n        value = value.toString()\n        return value.charAt(0).toUpperCase() + value.slice(1)\n      }\n    },\n\n    created() {\n      this.currentUrl = this.apiUrl;\n      this.fetchData();\n    },\n    mounted() {\n        this.scrollTrigger()\n    },\n}\n\n</script>\n\n<style>\n  #list{\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n  };\n\n  #card{\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n    height: 500px;\n\n  }\n  #list_group{\n    margin-left: auto;\n    margin-right: auto;\n    width: auto;\n    height: 400px;\n    overflow:scroll;\n    -webkit-overflow-scrolling: touch;\n  }\n  \n  \n</style>"]}]}