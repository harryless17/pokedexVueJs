{"remainingRequest":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/babel-loader/lib/index.js!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/src/components/PokemonInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/src/components/PokemonInfo.vue","mtime":1570892010181},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'PokemonInfo',\n  props: ['pokemonUrl'],\n  data: function data() {\n    return {\n      pokemon: {},\n      show: false\n    };\n  },\n  methods: {\n    //fetchData qui fait appelle à l'API et récupére la reponse et renvoie les données\n    fetchData: function fetchData() {\n      var _this = this;\n\n      var req = new Request(this.pokemonUrl);\n      console.log(req);\n      fetch(req).then(function (resp) {\n        if (resp.status === 200) {\n          return resp.json();\n        } else {\n          _this.show = true;\n        }\n      }).then(function (data) {\n        _this.pokemon = data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    close: function close() {\n      this.$emit('closeDetail');\n    }\n  },\n  filters: {\n    capitalize: function capitalize(value) {\n      if (!value) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n  },\n  //Appel de fetchData() lorsque le composant est crée\n  created: function created() {\n    this.fetchData();\n  }\n};",{"version":3,"sources":["PokemonInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAGA,EAAA,KAAA,EAAA,CACA,YADA,CAHA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GAZA;AAcA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,SAHA,uBAGA;AAAA;;AACA,UAAA,GAAA,GAAA,IAAA,OAAA,CAAA,KAAA,UAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA,IAAA,EAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,IAAA,GAAA,IAAA;AACA;AACA,OAPA,EAQA,IARA,CAQA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,OAVA,EAWA,KAXA,CAWA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAbA;AAgBA,KAtBA;AAwBA,IAAA,KAxBA,mBAwBA;AACA,WAAA,KAAA,CAAA,aAAA;AACA;AA1BA,GAdA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,OAAA,EAAA;AACA,MAAA,KAAA,GAAA,KAAA,CAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AALA,GA7CA;AAqDA;AACA,EAAA,OAtDA,qBAsDA;AACA,SAAA,SAAA;AACA;AAxDA,CAAA","sourcesContent":["<template>\n    <div id=\"card-info\">\n\n        <div v-if=\"show\">\n            <h1>Oups! Le pokemon n'existe pas</h1>\n            <b-button @click=\"close\" variant=\"outline-info\">Retourner à la page precedente</b-button>\n        </div>\n\n        <b-card v-if=\"!show\" id=\"b-card\" :img-src=\"pokemon.sprites.front_default\" img-alt=\"Image\" img-top\n            tag=\"article\" class=\"mb-2 bg-dark text-white\" >\n\n            <b-card-text class=\"text-white rounded-0\">\n                <h1 v-if=\"pokemon\">{{pokemon.species.name | capitalize}}\n                    <b-badge pill variant=\"warning\">{{pokemon.id}}</b-badge>\n                </h1>\n            </b-card-text>\n\n            <span>Type(s): </span>\n\n            <b-card-text > \n                <h5>\n                <b-badge pill variant=\"success\" v-for=\"(type, index) in pokemon.types\"\n                 :key=\"'poke'+index\" style=\"display: inline\">\n                    {{type.type.name}}\n                </b-badge>\n                </h5>\n            </b-card-text>\n            <b-button @click=\"close\" variant=\"outline-info\">Choose an other pokemon</b-button>\n\n        </b-card>\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name : 'PokemonInfo',\n\n        props : [\n            'pokemonUrl'\n        ],\n\n        data() {\n            return {\n                pokemon : {},\n                show  : false,\n            } \n        },\n\n        methods: {\n        \n        //fetchData qui fait appelle à l'API et récupére la reponse et renvoie les données\n        fetchData() {\n            let req = new Request(this.pokemonUrl);\n               console.log(req);\n            fetch(req)\n            .then((resp) => {\n                if(resp.status === 200){\n                    return resp.json();\n                }else{\n                    this.show = true;\n                }\n            })\n            .then((data) => {\n                this.pokemon = data;      \n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            \n            \n        },\n        \n        close() {\n            this.$emit('closeDetail');\n        }\n        \n      \n    },\n     \n   filters: {\n            capitalize: function (value) {\n                if (!value) return ''\n                value = value.toString()\n                return value.charAt(0).toUpperCase() + value.slice(1)\n            }\n        },\n\n    //Appel de fetchData() lorsque le composant est crée\n    created() {\n      this.fetchData();\n    },\n\n    \n        \n    }\n\n</script>\n\n<style>\n    #card-info{\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n    height: 500px;\n  }\n    #b-card{\n    margin-left: auto;\n    margin-right: auto;\n    width: 70%;\n    height: 500px;\n  }\n</style>"],"sourceRoot":"src/components"}]}