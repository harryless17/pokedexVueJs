{"remainingRequest":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/babel-loader/lib/index.js!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/src/components/PokemonsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/src/components/PokemonsList.vue","mtime":1570909004874},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/manseur/Bureau/Auto-Didacte/CLI/pokedex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'PokemonsList',\n  props: ['apiUrl'],\n  data: function data() {\n    return {\n      pokemons: [],\n      nextUrl: '',\n      currentUrl: ''\n    };\n  },\n  methods: {\n    //fetchData qui fait appelle à l'API et récupére la reponse et renvoie les données\n    fetchData: function fetchData() {\n      var _this = this;\n\n      var req = new Request(this.currentUrl);\n      fetch(req).then(function (resp) {\n        if (resp.status === 200) return resp.json();\n      }).then(function (data) {\n        _this.nextUrl = data.next;\n        data.results.forEach(function (pokemon) {\n          _this.pokemons.push(pokemon);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //Methode qui s'occupe du scroll avec pagination\n    scrollTrigger: function scrollTrigger() {\n      var _this2 = this;\n\n      var observer = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          if (entry.intersectionRatio > 0 && _this2.nextUrl) {\n            _this2.next();\n          }\n        });\n      });\n      observer.observe(this.$refs.infinitescrolltrigger);\n    },\n    next: function next() {\n      this.currentUrl = this.nextUrl;\n      this.fetchData();\n    },\n    //Recuperation de l'evenement du click sur le nom d'un pokemon\n    setPokemonUrl: function setPokemonUrl(url) {\n      this.$emit('setPokemonUrl', url);\n    }\n  },\n  filters: {\n    capitalize: function capitalize(value) {\n      if (!value) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    }\n  },\n  created: function created() {\n    this.currentUrl = this.apiUrl;\n    this.fetchData();\n  },\n  mounted: function mounted() {\n    this.scrollTrigger();\n  }\n};",{"version":3,"sources":["PokemonsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,KAAA,EAAA,CACA,QADA,CAFA;AAMA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GAZA;AAaA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,SAHA,uBAGA;AAAA;;AACA,UAAA,GAAA,GAAA,IAAA,OAAA,CAAA,KAAA,UAAA,CAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,CACA,IADA,CACA,UAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,MAAA,KAAA,GAAA,EACA,OAAA,IAAA,CAAA,IAAA,EAAA;AACA,OAJA,EAKA,IALA,CAKA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,IAAA;AACA,QAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,SAFA;AAGA,OAVA,EAWA,KAXA,CAWA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAbA;AAcA,KAnBA;AAqBA;AACA,IAAA,aAtBA,2BAsBA;AAAA;;AACA,UAAA,QAAA,GAAA,IAAA,oBAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,CAAA,iBAAA,GAAA,CAAA,IAAA,MAAA,CAAA,OAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA;AACA;AACA,SAJA;AAKA,OANA,CAAA;AAQA,MAAA,QAAA,CAAA,OAAA,CAAA,KAAA,KAAA,CAAA,qBAAA;AACA,KAhCA;AAkCA,IAAA,IAlCA,kBAkCA;AACA,WAAA,UAAA,GAAA,KAAA,OAAA;AACA,WAAA,SAAA;AACA,KArCA;AAuCA;AACA,IAAA,aAxCA,yBAwCA,GAxCA,EAwCA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,GAAA;AACA;AA1CA,GAbA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,OAAA,EAAA;AACA,MAAA,KAAA,GAAA,KAAA,CAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA;AALA,GAzDA;AAiEA,EAAA,OAjEA,qBAiEA;AACA,SAAA,UAAA,GAAA,KAAA,MAAA;AACA,SAAA,SAAA;AACA,GApEA;AAqEA,EAAA,OArEA,qBAqEA;AACA,SAAA,aAAA;AACA;AAvEA,CAAA","sourcesContent":["<template>\n    <div id=\"list\">\n        <b-card\n          id=\"card\"\n          title=\"Pokemon's List\"\n          class=\"mb-2 border-dark \"\n          \n        >\n        <b-list-group id=\"list_group\"  >\n            <b-list-group-item id_= \"list_group_item\"  \n            v-for=\"(pokemon, index) in pokemons\" :key=\"'poke'+index\" \n            class=\"mb-2 bg-dark text-white\" \n            @click=\"setPokemonUrl(pokemon.url)\" style=\"cursor: url('../src/assets/pokeball.png'),auto; \" button>{{ pokemon.name | capitalize }}\n        </b-list-group-item>\n        <div ref=\"infinitescrolltrigger\"></div>\n\n        </b-list-group>\n          \n        </b-card>\n        \n    </div>\n</template>\n\n<script>\n\nexport default {\n    name : 'PokemonsList',\n    props : [\n        'apiUrl',\n        \n    ],\n    data: () => {\n      return {\n        pokemons: [],\n        nextUrl: '',\n        currentUrl: '',\n      }\n    },\n    methods: {\n\n        //fetchData qui fait appelle à l'API et récupére la reponse et renvoie les données\n        fetchData() {\n        let req = new Request(this.currentUrl);\n        fetch(req)\n          .then((resp) => {\n            if(resp.status === 200)\n              return resp.json();\n          })\n          .then((data) => {\n            this.nextUrl = data.next;\n            data.results.forEach(pokemon => {\n              this.pokemons.push(pokemon);\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n          })\n      },\n\n      //Methode qui s'occupe du scroll avec pagination\n      scrollTrigger() {\n        const observer = new IntersectionObserver((entries) => {\n          entries.forEach(entry => {\n            if(entry.intersectionRatio > 0 && this.nextUrl) {\n              this.next();\n            }\n          });\n        });\n\n        observer.observe(this.$refs.infinitescrolltrigger);\n      },\n\n      next() {\n        this.currentUrl = this.nextUrl;\n        this.fetchData();\n      },\n\n      //Recuperation de l'evenement du click sur le nom d'un pokemon\n      setPokemonUrl(url) {\n        this.$emit('setPokemonUrl', url);\n      }\n    },\n    filters: {\n      capitalize: function (value) {\n        if (!value) return ''\n        value = value.toString()\n        return value.charAt(0).toUpperCase() + value.slice(1)\n      }\n    },\n\n    created() {\n      this.currentUrl = this.apiUrl;\n      this.fetchData();\n    },\n    mounted() {\n        this.scrollTrigger()\n    },\n}\n\n</script>\n\n<style>\n  #list{\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n  };\n\n  #card{\n    margin-left: auto;\n    margin-right: auto;\n    width: 50%;\n    height: 500px;\n\n  }\n  #list_group{\n    margin-left: auto;\n    margin-right: auto;\n    width: auto;\n    height: 400px;\n    overflow:scroll;\n    -webkit-overflow-scrolling: touch;\n  }\n  \n  \n</style>"],"sourceRoot":"src/components"}]}